---
import "../styles/global.css";

export interface Props {
	title: string;
	description?: string;
}

const {
	title,
	description = "Fullstack engineer specializing in scalable web apps and clean system architecture.",
} = Astro.props;
---

<!doctype html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content={description} />
		<meta name="viewport" content="width=device-width, initial-scale=1.0" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />

		<!-- Open Graph -->
		<meta property="og:title" content={title} />
		<meta property="og:description" content={description} />
		<meta property="og:type" content="website" />
		<meta property="og:url" content={Astro.url} />

		<!-- Twitter -->
		<meta name="twitter:card" content="summary_large_image" />
		<meta name="twitter:title" content={title} />
		<meta name="twitter:description" content={description} />

		<title>{title}</title>

		<!-- Google Fonts -->
		<link rel="preconnect" href="https://fonts.googleapis.com" />
		<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
	</head>
	<body class="font-sans antialiased">
		<slot />

		<script>
			// Theme handling
			function getThemePreference() {
				if (
					typeof localStorage !== "undefined" &&
					localStorage.getItem("theme")
				) {
					return localStorage.getItem("theme");
				}
				return window.matchMedia("(prefers-color-scheme: dark)").matches
					? "dark"
					: "light";
			}

			function updateTheme() {
				const theme = getThemePreference() ?? "light";
				document.documentElement.classList.toggle(
					"dark",
					theme === "dark"
				);
				if (typeof localStorage !== "undefined") {
					localStorage.setItem("theme", theme);
				}
			}

			// Set theme on load
			updateTheme();

			// Listen for theme changes
			document.addEventListener("astro:after-swap", updateTheme);
		</script>
	</body>
</html>
